@using Domain.Identity
@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item d-none d-sm-inline-block">
            <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@Resources.Views.Shared._Layout.Hello @((await UserManager.GetUserAsync(User)).FirstName)  @User.Identity.Name!</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button  type="submit" class="nav-link btn btn-link text-dark">@Resources.Views.Shared._Layout.Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item d-none d-sm-inline-block">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">@Resources.Views.Shared._Layout.Register</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">@Resources.Views.Shared._Layout.Login</a>
        </li>
    }
</ul>

@* // @((await UserManager.GetUserAsync(User)).FirstName) *@
@*  *@ 